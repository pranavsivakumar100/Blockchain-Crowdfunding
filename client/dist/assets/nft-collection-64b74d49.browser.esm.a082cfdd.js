var d=Object.defineProperty;var g=(s,a,t)=>a in s?d(s,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[a]=t;var e=(s,a,t)=>(g(s,typeof a!="symbol"?a+"":a,t),t);import{a0 as l,a1 as C,a2 as W,bK as f,a4 as w,a5 as y,A as T,a6 as o,a7 as R}from"./index.b8b39119.js";import{C as b,a as S,G as E,b as A}from"./contract-appuri-c5be7b04.browser.esm.a5500bdc.js";import{C as B}from"./contract-interceptor-d7b164a7.browser.esm.b65ebba9.js";import{C as M,a as O}from"./contract-owner-bfdb8e71.browser.esm.5ea689bb.js";import{C as v}from"./contract-platform-fee-91638472.browser.esm.73675b7f.js";import{C as I}from"./contract-roles-cd4f001b.browser.esm.5f967575.js";import{C as P}from"./contract-sales-2f4deebb.browser.esm.b633bf0f.js";import{S as k}from"./erc-721-standard-85fce2c5.browser.esm.f201d672.js";import{a as x}from"./erc-721-43dfcb0d.browser.esm.c9316c0c.js";import"./setErc20Allowance-db4e8402.browser.esm.6b5789eb.js";import"./QueryParams-3376d6a8.browser.esm.b01ff5ba.js";import"./index.532955a9.js";import"./treeify.b8112f75.js";import"./assertEnabled-993354c0.browser.esm.18458c2f.js";import"./drop-claim-conditions-8a3ca2fb.browser.esm.6ff0b9c1.js";const c=class extends k{constructor(t,r,n){let h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},p=arguments.length>4?arguments[4]:void 0,m=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new C(t,r,p,h,n);super(u,n,m);e(this,"mint",o(async t=>this.erc721.mint.prepare(t)));e(this,"mintTo",o(async(t,r)=>this.erc721.mintTo.prepare(t,r)));e(this,"mintBatch",o(async t=>this.erc721.mintBatch.prepare(t)));e(this,"mintBatchTo",o(async(t,r)=>this.erc721.mintBatchTo.prepare(t,r)));e(this,"burn",o(t=>this.erc721.burn.prepare(t)));this.abi=W.parse(p||[]),this.metadata=new b(this.contractWrapper,f,this.storage),this.app=new S(this.contractWrapper,this.metadata,this.storage),this.roles=new I(this.contractWrapper,c.contractRoles),this.royalties=new M(this.contractWrapper,this.metadata),this.sales=new P(this.contractWrapper),this.encoder=new w(this.contractWrapper),this.estimator=new E(this.contractWrapper),this.events=new A(this.contractWrapper),this.platformFees=new v(this.contractWrapper),this.interceptor=new B(this.contractWrapper),this.signature=new x(this.contractWrapper,this.storage),this.owner=new O(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[y("transfer"),T])}async getMintTransaction(t,r){return this.erc721.getMintTransaction(t,r)}async prepare(t,r,n){return R.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:n})}async call(t,r,n){return this.contractWrapper.call(t,r,n)}};let i=c;e(i,"contractRoles",l);export{i as NFTCollection};
