import {
  Erc721
} from "./chunk-ZWW5UF53.js";
import {
  Transaction,
  buildTransactionFunction,
  resolveAddress
} from "./chunk-CFECTRPO.js";
import {
  init_shim
} from "./chunk-6E35MBRA.js";
import {
  __publicField
} from "./chunk-IJ7IQSKN.js";

// node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-85fce2c5.browser.esm.js
init_shim();
var StandardErc721 = class {
  constructor(contractWrapper, storage, chainId) {
    __publicField(this, "transfer", buildTransactionFunction(async (to, tokenId) => {
      return this.erc721.transfer.prepare(to, tokenId);
    }));
    __publicField(this, "setApprovalForAll", buildTransactionFunction(async (operator, approved) => {
      return this.erc721.setApprovalForAll.prepare(operator, approved);
    }));
    __publicField(this, "setApprovalForToken", buildTransactionFunction(async (operator, tokenId) => {
      return Transaction.fromContractWrapper({
        contractWrapper: this.contractWrapper,
        method: "approve",
        args: [await resolveAddress(operator), tokenId]
      });
    }));
    this.contractWrapper = contractWrapper;
    this.storage = storage;
    this.erc721 = new Erc721(this.contractWrapper, this.storage, chainId);
    this._chainId = chainId;
  }
  get chainId() {
    return this._chainId;
  }
  onNetworkUpdated(network) {
    this.contractWrapper.updateSignerOrProvider(network);
  }
  getAddress() {
    return this.contractWrapper.address;
  }
  async getAll(queryParams) {
    return this.erc721.getAll(queryParams);
  }
  async getOwned(walletAddress, queryParams) {
    if (walletAddress) {
      walletAddress = await resolveAddress(walletAddress);
    }
    return this.erc721.getOwned(walletAddress, queryParams);
  }
  async getOwnedTokenIds(walletAddress) {
    if (walletAddress) {
      walletAddress = await resolveAddress(walletAddress);
    }
    return this.erc721.getOwnedTokenIds(walletAddress);
  }
  async totalSupply() {
    return this.erc721.totalCirculatingSupply();
  }
  async get(tokenId) {
    return this.erc721.get(tokenId);
  }
  async ownerOf(tokenId) {
    return this.erc721.ownerOf(tokenId);
  }
  async balanceOf(address) {
    return this.erc721.balanceOf(address);
  }
  async balance() {
    return this.erc721.balance();
  }
  async isApproved(address, operator) {
    return this.erc721.isApproved(address, operator);
  }
};

export {
  StandardErc721
};
//# sourceMappingURL=chunk-K2EKCGXX.js.map
