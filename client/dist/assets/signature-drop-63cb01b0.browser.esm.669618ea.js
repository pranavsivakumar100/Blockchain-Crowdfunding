var y=Object.defineProperty;var f=(c,e,t)=>e in c?y(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t;var o=(c,e,t)=>(f(c,typeof e!="symbol"?e+"":e,t),t);import{D as u}from"./QueryParams-3376d6a8.browser.esm.b01ff5ba.js";import{a0 as g,a1 as w,a2 as W,bL as T,a4 as b,bD as A,B as i,a5 as S,A as E,a6 as p,a7 as N}from"./index.b8b39119.js";import{C as R,a as U,G as k,b as M}from"./contract-appuri-c5be7b04.browser.esm.a5500bdc.js";import{C as I}from"./contract-interceptor-d7b164a7.browser.esm.b65ebba9.js";import{C as x,D as F,a as L}from"./contract-owner-bfdb8e71.browser.esm.5ea689bb.js";import{C as _}from"./contract-platform-fee-91638472.browser.esm.73675b7f.js";import{C as D}from"./contract-roles-cd4f001b.browser.esm.5f967575.js";import{C as P}from"./contract-sales-2f4deebb.browser.esm.b633bf0f.js";import{D as v}from"./drop-claim-conditions-8a3ca2fb.browser.esm.6ff0b9c1.js";import{S as B}from"./erc-721-standard-85fce2c5.browser.esm.f201d672.js";import{a as d}from"./erc-721-43dfcb0d.browser.esm.c9316c0c.js";import{P as O}from"./thirdweb-checkout-ec92a478.browser.esm.729b2f3b.js";import"./setErc20Allowance-db4e8402.browser.esm.6b5789eb.js";import"./index.532955a9.js";import"./treeify.b8112f75.js";import"./assertEnabled-993354c0.browser.esm.18458c2f.js";const h=class extends B{constructor(t,a,r){let n=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0,m=arguments.length>5?arguments[5]:void 0,C=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new w(t,a,s,n,r);super(C,r,m);o(this,"createBatch",p(async(t,a)=>this.erc721.lazyMint.prepare(t,a)));o(this,"claimTo",p(async(t,a,r)=>this.erc721.claimTo.prepare(t,a,r)));o(this,"claim",p(async(t,a)=>this.erc721.claim.prepare(t,a)));o(this,"burn",p(async t=>this.erc721.burn.prepare(t)));this.abi=W.parse(s||[]),this.metadata=new R(this.contractWrapper,T,this.storage),this.app=new U(this.contractWrapper,this.metadata,this.storage),this.roles=new D(this.contractWrapper,h.contractRoles),this.royalties=new x(this.contractWrapper,this.metadata),this.sales=new P(this.contractWrapper),this.encoder=new b(this.contractWrapper),this.estimator=new k(this.contractWrapper),this.events=new M(this.contractWrapper),this.platformFees=new _(this.contractWrapper),this.interceptor=new I(this.contractWrapper),this.claimConditions=new v(this.contractWrapper,this.metadata,this.storage),this.signature=new d(this.contractWrapper,this.storage),this.revealer=new F(this.contractWrapper,this.storage,A.name,()=>this.erc721.nextTokenIdToMint()),this.signature=new d(this.contractWrapper,this.storage),this.owner=new L(this.contractWrapper),this.checkout=new O(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async totalSupply(){const[t,a]=await Promise.all([this.totalClaimedSupply(),this.totalUnclaimedSupply()]);return t.add(a)}async getAllClaimed(t){const a=i.from(t?.start||0).toNumber(),r=i.from(t?.count||u).toNumber(),n=Math.min((await this.totalClaimedSupply()).toNumber(),a+r);return await Promise.all(Array.from(Array(n).keys()).map(s=>this.get(s.toString())))}async getAllUnclaimed(t){const a=i.from(t?.start||0).toNumber(),r=i.from(t?.count||u).toNumber(),n=i.from(Math.max((await this.totalClaimedSupply()).toNumber(),a)),s=i.from(Math.min((await this.contractWrapper.read("nextTokenIdToMint",[])).toNumber(),n.toNumber()+r));return await Promise.all(Array.from(Array(s.sub(n).toNumber()).keys()).map(m=>this.erc721.getTokenMetadata(n.add(m).toString())))}async totalClaimedSupply(){return this.erc721.totalClaimedSupply()}async totalUnclaimedSupply(){return this.erc721.totalUnclaimedSupply()}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[S("transfer"),E])}async getClaimTransaction(t,a,r){return this.erc721.getClaimTransaction(t,a,r)}async prepare(t,a,r){return N.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:a,overrides:r})}async call(t,a,r){return this.contractWrapper.call(t,a,r)}};let l=h;o(l,"contractRoles",g);export{l as SignatureDrop};
