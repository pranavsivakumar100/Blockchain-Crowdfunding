var $=Object.defineProperty;var z=(m,t,e)=>t in m?$(m,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):m[t]=e;var o=(m,t,e)=>(z(m,typeof t!="symbol"?t+"":t,e),e);import{a as c,S as J,E as Z}from"./assertEnabled-993354c0.browser.esm.18458c2f.js";import{d as u,b as Y,G as Q,C,a as N}from"./contract-appuri-c5be7b04.browser.esm.a5500bdc.js";import{B as l,c2 as F,c3 as h,a6 as d,c4 as D,t as k,c5 as X,a7 as y,aa as S,c6 as tt,c7 as et,a2 as A,c8 as M,as as T,c1 as rt,c9 as L,ca as O,cb as _,cc as U,cd as x,ce as at,cf as nt,cg as st,ch as it,ci as j,cj as G,ck as H,cl as ot,bH as q,ak as g,k as V,cm as ct,aI as E,aS as pt,aR as K,a1 as dt,a4 as mt,aJ as b,cn as ut,ah as ht,ar as lt,au as gt,ap as ft,aj as At,bR as yt,br as Wt,av as wt,af as vt,bm as Et,bn as St,bo as Tt}from"./index.b8b39119.js";import{v as B}from"./index.532955a9.js";import{C as Pt}from"./contract-interceptor-d7b164a7.browser.esm.b65ebba9.js";import{C as xt,a as Rt}from"./contract-owner-bfdb8e71.browser.esm.5ea689bb.js";import{C as Ct}from"./contract-platform-fee-91638472.browser.esm.73675b7f.js";import{C as bt}from"./contract-roles-cd4f001b.browser.esm.5f967575.js";import{C as Ft}from"./contract-sales-2f4deebb.browser.esm.b633bf0f.js";import{E as Dt}from"./erc-1155-27d7fe97.browser.esm.56aa63e0.js";import{E as Mt}from"./erc-20-2d8b7df7.browser.esm.83633c32.js";import{E as It}from"./erc-721-43dfcb0d.browser.esm.c9316c0c.js";import{M as Nt,a as kt,b as Lt}from"./marketplacev3-offers-156f3d0f.browser.esm.7d5f4d5c.js";import"./treeify.b8112f75.js";import"./setErc20Allowance-db4e8402.browser.esm.6b5789eb.js";import"./QueryParams-3376d6a8.browser.esm.b01ff5ba.js";import"./drop-claim-conditions-8a3ca2fb.browser.esm.6ff0b9c1.js";import"./cleanCurrencyAddress-26666487.browser.esm.34ede101.js";import"./marketplace-9e29ab16.browser.esm.42fe9f0f.js";let f=function(m){return m[m.None=0]="None",m[m.AddAdmin=1]="AddAdmin",m[m.RemoveAdmin=2]="RemoveAdmin",m}({});const R={startDate:l.from(0),expirationDate:l.from(0),approvedCallTargets:[],nativeTokenLimitPerTransaction:"0"},I=(()=>E.object({startDate:J,expirationDate:Z,nativeTokenLimitPerTransaction:pt.default(0),approvedCallTargets:E.union([E.array(K),E.literal("*")])}))(),Ot=(()=>E.array(E.object({signer:K,makeAdmin:E.boolean(),permissions:I})))(),_t=[{name:"signer",type:"address"},{name:"approvedTargets",type:"address[]"},{name:"nativeTokenLimitPerTransaction",type:"uint256"},{name:"permissionStartTimestamp",type:"uint128"},{name:"permissionEndTimestamp",type:"uint128"},{name:"reqValidityStartTimestamp",type:"uint128"},{name:"reqValidityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}],Ut=[{name:"signer",type:"address"},{name:"isAdmin",type:"uint8"},{name:"approvedTargets",type:"address[]"},{name:"nativeTokenLimitPerTransaction",type:"uint256"},{name:"permissionStartTimestamp",type:"uint128"},{name:"permissionEndTimestamp",type:"uint128"},{name:"reqValidityStartTimestamp",type:"uint128"},{name:"reqValidityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}];class qt{constructor(t){o(this,"featureName",h.name);o(this,"grantAdminPermissions",d(async t=>{const e=await g(t);return await this.sendSignerPermissionRequest(e,R,f.AddAdmin)}));o(this,"revokeAdminPermissions",d(async t=>{const e=await g(t);return await this.sendSignerPermissionRequest(e,R,f.RemoveAdmin)}));o(this,"grantPermissions",d(async(t,e)=>{const r=await g(t),a=await I.parseAsync(e);return await this.sendSignerPermissionRequest(r,a,f.None)}));o(this,"updatePermissions",d(async(t,e)=>{const r=await g(t),a=await I.parseAsync(e);if(await this.isAdmin(r))throw new Error("Signer is already an admin. Cannot update permissions of an existing admin.");if(!await this.isSigner(r))throw new Error("Signer does not already have permissions. You can grant permissions using `grantPermissions`.");return await this.sendSignerPermissionRequest(r,a,f.None)}));o(this,"revokeAccess",d(async t=>{const e=await g(t);return await this.sendSignerPermissionRequest(e,{startDate:l.from(0),expirationDate:l.from(0),approvedCallTargets:[],nativeTokenLimitPerTransaction:"0"},f.None)}));o(this,"approveTargetForSigner",d(async(t,e)=>{const r=await g(t),a=await g(e);if(await this.isAdmin(r))throw new Error("Signer is already an admin. Cannot approve targets for an admin.");if(!await this.isSigner(r))throw new Error("Signer does not already have permissions. You can grant permissions using `grantPermissions`.");const n=await this.contractWrapper.read("getPermissionsForSigner",[r]);if(n.approvedTargets.includes(e))throw new Error("Target is already approved");const s=[...n.approvedTargets,a];return await this.sendSignerPermissionRequest(r,{startDate:l.from(n.startTimestamp),expirationDate:l.from(n.endTimestamp),approvedCallTargets:s,nativeTokenLimitPerTransaction:n.nativeTokenLimitPerTransaction.toString()},f.None)}));o(this,"disapproveTargetForSigner",d(async(t,e)=>{const r=await g(t),a=await g(e);if(await this.isAdmin(r))throw new Error("Signer is already an admin. Cannot approve targets for an admin.");if(!await this.isSigner(r))throw new Error("Signer does not already have permissions. You can grant permissions using `grantPermissions`.");const n=await this.contractWrapper.read("getPermissionsForSigner",[r]);if(!n.approvedTargets.includes(a))throw new Error("Target is currently not approved");const s=n.approvedTargets.filter(p=>V(p)!==V(a));return await this.sendSignerPermissionRequest(r,{startDate:l.from(n.startTimestamp),expirationDate:l.from(n.endTimestamp),approvedCallTargets:s,nativeTokenLimitPerTransaction:n.nativeTokenLimitPerTransaction.toString()},f.None)}));o(this,"resetAllPermissions",d(async t=>{const e=await Ot.parseAsync(t);if(this.hasDuplicateSigners(e))throw new Error("Duplicate signers found in input.");const r=[],a=[],n=[],s=await this.getAllAdmins(),p=e.filter(i=>i.makeAdmin).map(i=>i.signer);s.forEach(async i=>{if(!p.includes(i)){const v=(await this.sendSignerPermissionRequest(i,R,f.RemoveAdmin)).encode();r.push(v)}});const W=await this.getAllSigners(),P=e.filter(i=>!i.makeAdmin).map(i=>i.signer);await Promise.all(W.map(async i=>{if(!P.includes(i.signer)){const v=(await this.sendSignerPermissionRequest(i.signer,R,f.None)).encode();n.push(v)}}));for(const i of e)if(i.makeAdmin)(await this.sendSignerPermissionRequest(i.signer,R,f.AddAdmin)).encode();else{const v=(await this.sendSignerPermissionRequest(i.signer,i.permissions,f.None)).encode();a.push(v)}const w=[];return r.forEach(i=>{w.push(i)}),n.forEach(i=>{w.push(i)}),a.forEach(i=>{w.push(i)}),y.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[w]})}));this.contractWrapper=t}getAddress(){return this.contractWrapper.address}hasDuplicateSigners(t){const e={},r=t.map(a=>a.signer);for(const a of r)if(!e[a])e[a]=!0;else return!0;return!1}parseSignerPermissionsStruct(t){return{startDate:new Date(parseInt(t.startTimestamp.toString())*1e3),expirationDate:new Date(parseInt(t.endTimestamp.toString())*1e3),nativeTokenLimitPerTransaction:l.from(t.nativeTokenLimitPerTransaction),approvedCallTargets:t.approvedTargets}}async sendSignerPermissionRequest(t,e,r){const{payload:a,signature:n}=await this.generatePayload(t,e,r);return y.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPermissionsForSigner",args:[a,n]})}async generatePayload(t,e,r){const a={signer:t,isAdmin:r.valueOf(),approvedTargets:e.approvedCallTargets==="*"?[ot]:e.approvedCallTargets,nativeTokenLimitPerTransaction:q(e.nativeTokenLimitPerTransaction),permissionStartTimestamp:e.startDate,permissionEndTimestamp:e.expirationDate,reqValidityStartTimestamp:0,reqValidityEndTimestamp:l.from(Math.floor(new Date(Date.now()+31536e7).getTime()/1e3)),uid:B(void 0)},n=await this.contractWrapper.getChainID(),s=this.contractWrapper.getSigner();T(s,"No signer available");const p=await this.contractWrapper.signTypedData(s,{name:"Account",version:"1",chainId:n,verifyingContract:this.getAddress()},{SignerPermissionRequest:Ut},a);return{payload:a,signature:p}}async generateLegacyPayload(t,e){if(e.approvedCallTargets==="*")throw new Error("Wildcard call targets are not supported on legacy account permissions contract, please deploy an updated contract factory.");const r={signer:t,approvedTargets:e.approvedCallTargets,nativeTokenLimitPerTransaction:q(e.nativeTokenLimitPerTransaction),permissionStartTimestamp:e.startDate,permissionEndTimestamp:e.expirationDate,reqValidityStartTimestamp:0,reqValidityEndTimestamp:l.from(Math.floor(new Date(Date.now()+1e3*60*60*24*365*10).getTime()/1e3)),uid:B(void 0)},a=await this.contractWrapper.getChainID(),n=this.contractWrapper.getSigner();T(n,"No signer available");const s=await this.contractWrapper.signTypedData(n,{name:"Account",version:"1",chainId:a,verifyingContract:this.getAddress()},{SignerPermissionRequest:_t},r);return{payload:r,signature:s}}async isAdmin(t){const e=await g(t);return await this.contractWrapper.read("isAdmin",[e])}async isSigner(t){const e=await g(t);return await this.contractWrapper.read("isActiveSigner",[e])}async getAllAdmins(){return await this.contractWrapper.read("getAllAdmins",[])}async getAllSigners(){const t=await this.contractWrapper.read("getAllActiveSigners",[]);return await Promise.all(t.map(async e=>{const r=e.signer,a=this.parseSignerPermissionsStruct(e);return{signer:r,permissions:a}}))}async getAllAdminsAndSigners(){const e=(await this.getAllAdmins()).map(a=>({isAdmin:!0,signer:a,permissions:{startDate:new Date(0),expirationDate:new Date(0),nativeTokenLimitPerTransaction:l.from(0),approvedCallTargets:[]}})),r=await this.getAllSigners();return[...e,...r]}}class Vt{constructor(t){o(this,"featureName",F.name);o(this,"grantAdminPermissions",d(async t=>c(this.accountPermissions,h).grantAdminPermissions.prepare(t)));o(this,"revokeAdminPermissions",d(async t=>c(this.accountPermissions,h).revokeAdminPermissions.prepare(t)));o(this,"grantPermissions",d(async(t,e)=>c(this.accountPermissions,h).grantPermissions.prepare(t,e)));o(this,"updatePermissions",d(async(t,e)=>c(this.accountPermissions,h).updatePermissions.prepare(t,e)));o(this,"revokeAccess",d(async t=>c(this.accountPermissions,h).revokeAccess.prepare(t)));o(this,"approveTargetForSigner",d(async(t,e)=>c(this.accountPermissions,h).approveTargetForSigner.prepare(t,e)));o(this,"disapproveTargetForSigner",d(async(t,e)=>c(this.accountPermissions,h).disapproveTargetForSigner.prepare(t,e)));o(this,"resetAllPermissions",d(async t=>c(this.accountPermissions,h).resetAllPermissions.prepare(t)));this.contractWrapper=t,this.accountPermissions=this.detectAccountPermissions()}detectAccountPermissions(){if(u(this.contractWrapper,"AccountPermissions")||u(this.contractWrapper,"AccountPermissionsV1"))return new qt(this.contractWrapper)}getAddress(){return this.contractWrapper.address}async isAdmin(t){return c(this.accountPermissions,h).isAdmin(t)}async isSigner(t){return c(this.accountPermissions,h).isSigner(t)}async getAllAdmins(){return c(this.accountPermissions,h).getAllAdmins()}async getAllSigners(){return c(this.accountPermissions,h).getAllSigners()}async getAllAdminsAndSigners(){return c(this.accountPermissions,h).getAllAdminsAndSigners()}}class Bt{constructor(t){o(this,"featureName",D.name);o(this,"createAccount",d(async(t,e)=>{if(await this.isAccountDeployed(t,e))throw new Error(`Account already deployed for admin: ${t}`);let r=k("");return e&&(r=e),y.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createAccount",args:[t,r],parse:a=>({address:this.contractWrapper.parseLogs("AccountCreated",a?.logs)[0].args.account,receipt:a})})}));this.contractWrapper=t,this.events=new Y(this.contractWrapper)}getAddress(){return this.contractWrapper.address}async predictAccountAddress(t,e){let r=k("");return e&&(r=e),this.contractWrapper.read("getAddress",[t,r])}async getAssociatedAccounts(t){return this.contractWrapper.read("getAccountsOfSigner",[t])}async getAllAccounts(){return await this.contractWrapper.read("getAllAccounts",[])}async isAccountDeployed(t,e){const r=await this.predictAccountAddress(t,e);return X(r,this.contractWrapper.getProvider())}}function Yt(m,t){const r=A.parse(m||[]).filter(n=>n.type==="event"),a=[];for(const n of r){const s=ct(n.name,t,"events");a.push({inputs:n.inputs||[],outputs:n.outputs||[],name:n.name||"unknown",comment:s})}return a}class jt{constructor(t,e){this.contractWrapper=t,this.storage=e}async get(){return this._cachedMetadata?this._cachedMetadata:(this._cachedMetadata=await S(this.contractWrapper.address,this.contractWrapper.getProvider(),this.storage,this.contractWrapper.options),this._cachedMetadata)}async extractSources(){const t=await this.get();return tt(t,this.storage)}async extractFunctions(){let t;try{t=await this.get()}catch{}return et(A.parse(this.contractWrapper.abi),t?.metadata)}async extractEvents(){let t;try{t=await this.get()}catch{}return Yt(A.parse(this.contractWrapper.abi),t?.metadata)}}class Gt{constructor(t){o(this,"featureName",M.name);o(this,"add",d(async t=>y.fromContractWrapper({contractWrapper:this.contractWrapper,method:"addExtension",args:[t.extension],parse:async e=>{if(this.contractWrapper.parseLogs("ExtensionAdded",e.logs).length<1)throw new Error("No ExtensionAdded event found");const a=t.extensionAbi?A.parse(t.extensionAbi):(await S(t.extension.metadata.implementation,this.contractWrapper.getProvider(),this.contractWrapper.storage)).abi,n=this.filterAbiForAdd(a,t.extension),s=L([A.parse(this.contractWrapper.abi),n]);return this.contractWrapper.updateAbi(s),e}})));o(this,"addDeployed",d(async t=>{let e=t.extensionAbi;e||(e=(await S(t.extensionAddress,this.contractWrapper.getProvider(),this.contractWrapper.storage,this.contractWrapper.options)).abi),T(e,"Require extension ABI");let r="";if(t.extensionMetadata)if(typeof t.extensionMetadata=="string")r=t.extensionMetadata;else{const s=await O.parseAsync(t.extensionMetadata);r=await this.contractWrapper.storage.upload(s)}const a=_(A.parse(e)),n={metadata:{name:t.extensionName,metadataURI:r,implementation:t.extensionAddress},functions:a};return this.add.prepare({extension:n,extensionAbi:e})}));o(this,"addPublished",d(async t=>{const e=t.version||"latest",{deployedExtensionAddress:r,extensionMetadata:a}=await this.deployExtension(t.extensionName,t.publisherAddress||U,e);return this.addDeployed.prepare({extensionName:t.extensionName,extensionAddress:r,extensionMetadata:t.extensionMetadataOverride||a})}));o(this,"replace",d(async t=>y.fromContractWrapper({contractWrapper:this.contractWrapper,method:"replaceExtension",args:[t.extension],parse:async e=>{if(this.contractWrapper.parseLogs("ExtensionReplaced",e.logs).length<1)throw new Error("No ExtensionReplaced event found");const a=t.extensionAbi?A.parse(t.extensionAbi):(await S(t.extension.metadata.implementation,this.contractWrapper.getProvider(),this.contractWrapper.storage)).abi,n=this.filterAbiForRemove(A.parse(this.contractWrapper.abi),a),s=this.filterAbiForAdd(a,t.extension),p=L([n,s]);return this.contractWrapper.updateAbi(p),e}})));o(this,"replaceDeployed",d(async t=>{let e=t.extensionAbi;e||(e=(await S(t.extensionAddress,this.contractWrapper.getProvider(),this.contractWrapper.storage,this.contractWrapper.options)).abi),T(e,"Require extension ABI");let r="";if(t.extensionMetadata)if(typeof t.extensionMetadata=="string")r=t.extensionMetadata;else{const s=await O.parseAsync(t.extensionMetadata);r=await this.contractWrapper.storage.upload(s)}const a=_(A.parse(e)),n={metadata:{name:t.extensionName,metadataURI:r,implementation:t.extensionAddress},functions:a};return this.replace.prepare({extension:n,extensionAbi:e})}));o(this,"replacePublished",d(async t=>{const e=t.version||"latest",{deployedExtensionAddress:r,extensionMetadata:a}=await this.deployExtension(t.extensionName,t.publisherAddress||U,e);return this.replaceDeployed.prepare({extensionName:t.extensionName,extensionAddress:r,extensionMetadata:t.extensionMetadataOverride||a})}));o(this,"remove",d(async t=>{const e=await this.getExtensionAddress(t.extensionName);return y.fromContractWrapper({contractWrapper:this.contractWrapper,method:"removeExtension",args:[t.extensionName],parse:async r=>{if(this.contractWrapper.parseLogs("ExtensionRemoved",r.logs).length<1)throw new Error("No ExtensionRemoved event found");const n=(await S(e,this.contractWrapper.getProvider(),this.contractWrapper.storage)).abi,s=this.filterAbiForRemove(A.parse(this.contractWrapper.abi),n);return this.contractWrapper.updateAbi(s),r}})}));this.contractWrapper=t}getAddress(){return this.contractWrapper.readContract.address}async getAll(){return await this.contractWrapper.readContract.getAllExtensions()}async get(t){return await this.contractWrapper.readContract.getExtension(t)}async getExtensionAddress(t){return(await this.get(t)).metadata.implementation}async getAllFunctions(t){return(await this.get(t)).functions}async getExtensionForFunction(t){let e=t.functionSelector;return e||(T(t.functionSignature,"Atleast one of function selector and signature must be provided"),e=rt(t.functionSignature).substring(0,10)),await this.contractWrapper.readContract.getMetadataForFunction(e)}async getExtensionAddressForFunction(t){return(await this.getExtensionForFunction(t)).implementation}filterAbiForAdd(t,e){const r=new x(t),a=e.functions.map(s=>s.functionSelector);return t.filter(s=>{const p=Object.values(new x([s]).functions);if(p.length===0)return!1;const W=r.getSighash(p[0]);return a.includes(W)})}filterAbiForRemove(t,e){const r=new x(t),a=new x(e),n=Object.values(a.functions).map(p=>a.getSighash(p));return t.filter(p=>{const W=Object.values(new x([p]).functions);if(W.length===0)return!1;const P=r.getSighash(W[0]);return!n.includes(P)})}async deployExtension(t,e){let r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"latest";const a=await at(e,t,r,this.contractWrapper.storage,this.contractWrapper.options.clientId,this.contractWrapper.options.secretKey),n=await nt(a.metadataUri,this.contractWrapper.storage,this.contractWrapper.getProvider(),"",this.contractWrapper.options.clientId,this.contractWrapper.options.secretKey),s=n.find(i=>i.type==="implementation")?.transaction.predictedAddress,p=n.filter(i=>i.transaction.data&&i.transaction.data.length>0),W=p.filter(i=>i.type!=="infra").map(i=>i.transaction),P=p.filter(i=>i.type==="infra").map(i=>i.transaction),w=this.contractWrapper.getSigner();T(w,"Signer is required"),await st(w,P,{});for(const i of W)try{await it(w,i)}catch(v){console.debug(`Error deploying contract at ${i.predictedAddress}`,v?.message)}return{deployedExtensionAddress:s,extensionMetadata:a.metadataUri}}}class Ht{constructor(t){o(this,"featureName",j.name);o(this,"drop",d(async(t,e,r)=>y.fromContractWrapper({contractWrapper:this.contractWrapper,method:"airdropERC20",args:[t,e,r],parse:a=>{const s=this.contractWrapper.parseLogs("AirdropFailed",a.logs).map(p=>({recipient:p.args.recipient,amount:p.args.amount.toString()}));return{successfulDropCount:r.length-s.length,failedDropCount:s.length,failedDrops:s}}})));this.contractWrapper=t}getAddress(){return this.contractWrapper.address}}class Kt{constructor(t){o(this,"featureName",G.name);o(this,"drop",d(async(t,e,r)=>y.fromContractWrapper({contractWrapper:this.contractWrapper,method:"airdropERC721",args:[t,e,r],parse:a=>{const s=this.contractWrapper.parseLogs("AirdropFailed",a.logs).map(p=>({recipient:p.args.recipient,tokenId:p.args.tokenId.toNumber()}));return{successfulDropCount:r.length-s.length,failedDropCount:s.length,failedDrops:s}}})));this.contractWrapper=t}getAddress(){return this.contractWrapper.address}}class $t{constructor(t){o(this,"featureName",H.name);o(this,"drop",d(async(t,e,r)=>y.fromContractWrapper({contractWrapper:this.contractWrapper,method:"airdropERC1155",args:[t,e,r],parse:a=>{const s=this.contractWrapper.parseLogs("AirdropFailed",a.logs).map(p=>({recipient:p.args.recipient,tokenId:p.args.tokenId.toNumber(),amount:p.args.amount.toString()}));return{successfulDropCount:r.length-s.length,failedDropCount:s.length,failedDrops:s}}})));this.contractWrapper=t}getAddress(){return this.contractWrapper.address}}class ge{get abi(){return A.parse(this.contractWrapper.abi||[])}get royalties(){return c(this.detectRoyalties(),ht)}get roles(){return c(this.detectRoles(),lt)}get sales(){return c(this.detectPrimarySales(),gt)}get platformFees(){return c(this.detectPlatformFees(),ft)}get owner(){return c(this.detectOwnable(),At)}get erc20(){return c(this.detectErc20(),yt)}get erc721(){return c(this.detectErc721(),Wt)}get erc1155(){return c(this.detectErc1155(),wt)}get app(){return c(this.detectApp(),vt)}get directListings(){return c(this.detectDirectListings(),Et)}get englishAuctions(){return c(this.detectEnglishAuctions(),St)}get offers(){return c(this.detectOffers(),Tt)}get airdrop20(){return c(this.detectAirdrop20(),j)}get airdrop721(){return c(this.detectAirdrop721(),G)}get airdrop1155(){return c(this.detectAirdrop1155(),H)}get accountFactory(){return c(this.detectAccountFactory(),D)}get account(){return c(this.detectAccount(),F)}get extensions(){return c(this.detectBaseRouter(),M)}get chainId(){return this._chainId}constructor(t,e,r,a){let n=arguments.length>4&&arguments[4]!==void 0?arguments[4]:{},s=arguments.length>5?arguments[5]:void 0,p=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new dt(t,e,r,n,a);this._chainId=s,this.storage=a,this.contractWrapper=p,this.events=new Y(this.contractWrapper),this.encoder=new mt(this.contractWrapper),this.interceptor=new Pt(this.contractWrapper),this.estimator=new Q(this.contractWrapper),this.publishedMetadata=new jt(this.contractWrapper,this.storage),this.metadata=new C(this.contractWrapper,b,this.storage)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}prepare(t,e,r){return y.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:e,overrides:r})}async call(t,e,r){return this.contractWrapper.call(t,e,r)}detectRoyalties(){if(u(this.contractWrapper,"Royalty")){const t=new C(this.contractWrapper,b,this.storage);return new xt(this.contractWrapper,t)}}detectRoles(){if(u(this.contractWrapper,"Permissions"))return new bt(this.contractWrapper,ut)}detectPrimarySales(){if(u(this.contractWrapper,"PrimarySale"))return new Ft(this.contractWrapper)}detectPlatformFees(){if(u(this.contractWrapper,"PlatformFee"))return new Ct(this.contractWrapper)}detectErc20(){if(u(this.contractWrapper,"ERC20"))return new Mt(this.contractWrapper,this.storage,this.chainId)}detectErc721(){if(u(this.contractWrapper,"ERC721"))return new It(this.contractWrapper,this.storage,this.chainId)}detectErc1155(){if(u(this.contractWrapper,"ERC1155"))return new Dt(this.contractWrapper,this.storage,this.chainId)}detectOwnable(){if(u(this.contractWrapper,"Ownable"))return new Rt(this.contractWrapper)}detectApp(){const t=new C(this.contractWrapper,b,this.storage);if(u(this.contractWrapper,"AppURI"))return new N(this.contractWrapper,t,this.storage);if(u(this.contractWrapper,"ContractMetadata"))return new N(this.contractWrapper,t,this.storage)}detectDirectListings(){if(u(this.contractWrapper,"DirectListings"))return new Nt(this.contractWrapper,this.storage)}detectEnglishAuctions(){if(u(this.contractWrapper,"EnglishAuctions"))return new kt(this.contractWrapper,this.storage)}detectOffers(){if(u(this.contractWrapper,"Offers"))return new Lt(this.contractWrapper,this.storage)}detectBaseRouter(){if(u(this.contractWrapper,M.name))return new Gt(this.contractWrapper)}detectAirdrop20(){if(u(this.contractWrapper,"AirdropERC20"))return new Ht(this.contractWrapper)}detectAirdrop721(){if(u(this.contractWrapper,"AirdropERC721"))return new Kt(this.contractWrapper)}detectAirdrop1155(){if(u(this.contractWrapper,"AirdropERC1155"))return new $t(this.contractWrapper)}detectAccountFactory(){if(u(this.contractWrapper,D.name))return new Bt(this.contractWrapper)}detectAccount(){if(u(this.contractWrapper,F.name))return new Vt(this.contractWrapper)}}export{ge as SmartContract};
